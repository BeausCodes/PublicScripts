# Run this to enable version expiration settings
Set-SPOTenant -EnableVersionExpirationSetting $true

# get the current version limits for entire site
Get-SPOListVersionPolicy -site https://CLIENTNAME.sharepoint.com/sites/SITENAME

# Enable version control limits and set expiry to 0 days 10 version 
# You can run Set-SPOSite -Identity SiteURL -EnableAutoExpirationVersionTrim $true to have sharepoint auto manage but is not recommended
# Append -ApplyToNewDocumentLibraries to apply only to new document librarys
Set-SPOSite -Identity https://CLIENTNAME.sharepoint.com/sites/SITENAME -EnableAutoExpirationVersionTrim $false -MajorVersionLimit 10 -MajorwithMinorVersionsLimit 1 -ExpireVersionsAfterDays 0

# Cleans up any versions past the limits specified in the batch job
New-SPOSiteFileVersionBatchDeleteJob -Identity https://CLIENTNAME.sharepoint.com/sites/SITENAME -MajorVersionLimit 10 -MajorWithMinorVersionsLimit 1

# Cleans up any versions past the limits for a specific library
New-SPOListFileVersionBatchDeleteJob -Site https://CLIENTNAME.sharepoint.com/sites/SITENAME -list LibraryName -MajorVersionLimit <delete major versions exceeding limit> -MajorWithMinorVersionsLimit <delete minor versions exceeding limit>

# Check on status of job
Get-SPOSiteFileVersionBatchDeleteJobProgress -Identity https://CLIENTNAME.sharepoint.com/sites/SITENAME





# Connect to SharePoint Online
Connect-SPOService -Url https://YOURTENANT-admin.sharepoint.com

# Get all site collections
$sites = Get-SPOSite -Limit All

# Loop through each site and create a batch delete job
foreach ($site in $sites) {
    Write-Host "Processing site: $($site.Url)"
    
    try {
        # Replace 'LibraryName' with the actual name of the document library for each site
        $libraryName = "LibraryName"

        # Create a batch delete job for each site
        New-SPOListFileVersionBatchDeleteJob -Site $site.Url -List $libraryName -MajorVersionLimit 250 -MajorWithMinorVersionsLimit 1

        Write-Host "Batch delete job created for: $($site.Url)"
    }
    catch {
        Write-Host "Error processing site: $($site.Url) - $_"
    }
}

Write-Host "Script completed."
